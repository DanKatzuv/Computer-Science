כללים לחישוב פונקציית זמן ריצה:
1. כל פקודה שווה ליחידת זמן.
2. בלולאות וברקורסיה אנחנו תלויים באורך הקלט (לדומגה: i = 0; i < n תלוי ב-n).
3. זמן הביצוע נחשב לפי המקרה הגרוע ביותר ומקסימום הפעולות.
4. כל הוראת תנאי נספרת כהוראה (כל חלק של תנאי מורכב נספר כהוראה בפני עצמו).
5. ב-if ו-else תמיד יחשבו את הבלוק הגדול יותר.
6. לולאת for מחושבת כ-3n + 2 או כ-n(k + 2) + 2 כאשר k הוא מספר הפקודות בגוף הלולאה.
7. בלולאת while כל ביטוי בוליאני בכותרת נספר פעם אחת והיא מחושבת כ-n(k + 2) כאשר k הוא פקודה.

חישוב משך רקורסיה
פעולה רקורסיבית מחליפה ביצוע של לולאה ולכן היא מתבצעת בקלט של n עד תנאי העצירה n פעמים. הצעד הבסיסי מחושב בהתאם למה שהפעולה מבצעת. משך הזמן של הפעולה הרקורסיבית שווה לצעד בסיסי כפול מספר הזימונים החוזרים.

מיון_מיזוג(arr):
	אם גודל המערך גדול מ-1: 
			1. חלק את arr לשני מערכים, arr1 ו-arr2 שמכילים כל אחד כמחצית מאיברי המערך
			2. מיון_מיזוג(arr1)
			3. מיון_מיזוג(arr2)
			4. מזג את arr1 ואת arr2 לתוך arr

			
אוטומט סופי לא דטרמיניסטי
מספיק שיש מסלול אחד שיוביל למצב מקבל של המילה בשפה. לא כל אותיות הקלט חייבות לצאת מכל מצב ואותה אות יכולה לצאת מאותו מצב יותר מפעם אחרת.